name: PR Status

# Controls when the workflow will run
on:
  pull_request_target:
    branches:    
      - main

jobs:
  documentation-status:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 20
      matrix:
        python-version: ['3.9']

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install requirements_dev.txt
      run: |
        function retry-with-backoff() {
          for BACKOFF in 0 1 2 4 8 16 32 64; do
            sleep $BACKOFF
            if "$@"; then
              return 0
            fi
          done
          return 1
        }
        python -m pip install --upgrade pip setuptools wheel
        retry-with-backoff pip install -r requirements_dev.txt
    - id: changed-files
      uses: tj-actions/changed-files@v35
      with:
        separator: ","
        since_last_remote_commit: "true"
    - name: documentation
      id: documentation
      run: |
        RESULT=$(echo ${{ steps.changed-files.outputs.all_changed_files }} | tr ',' '\n' | grep .py$ | xargs --no-run-if-empty interrogate -f 0 -v)
        if [ -z "${RESULT// }" ]; then
          RESULT="Coverage did not change as no python file was changed."
        else
          RESULT=$(tail -n +3 <<< $RESULT)
          STATUS=$(tail -n1 <<< $RESULT)
          STATUS=$(sed 's/-//g' <<< $STATUS)
          # trim
          STATUS=$(echo $STATUS | xargs echo -n)
          RESULT=$(head -n -1 <<< $RESULT)
          # remove second to last line
          RESULTA=$(head -n -2 <<< $RESULT)
          RESULTB=$(tail -n1 <<< $RESULT)
          NL=$'\n'
          RESULT="$RESULTA${NL}||||||${NL}$RESULTB"
          RESULT="$RESULT${NL}${NL}$STATUS"
          # Escape underscores such that they are correctly rendered in markdown.
          RESULT=$(sed 's/_/\\_/g' <<< $RESULT)
          RESULT="${RESULT//'%'/'%25'}"
          RESULT="${RESULT//$'\n'/'%0A'}"
          RESULT="${RESULT//$'\r'/'%0D'}"
        fi
        echo "::set-output name=result::$RESULT"
    - name: comment documentation result on PR
      uses: thollander/actions-comment-pull-request@v1
      with:
        message: |
          ## Docstring Coverage Report

          ${{ steps.documentation.outputs.result }}
        comment_includes: '## Docstring Coverage Report'
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
