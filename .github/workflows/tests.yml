name: Tests

# Controls when the workflow will run
on:
  pull_request:
    branches:
        - main
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 20
      matrix:
        python-version: ['3.9']

    steps:
    - uses: actions/checkout@v3
      with:
        ref: main
    - uses: actions/checkout@v3
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - uses: actions/cache@v1
      with:
        path: ~/.cache/torch
        key: ${{ runner.os }}-cache-torch
    - uses: actions/cache@v1
      with:
        path: ~/.torch
        key: ${{ runner.os }}-torch
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install requirements.txt
      run: |
        function retry-with-backoff() {
          for BACKOFF in 0 1 2 4 8 16 32 64; do
            sleep $BACKOFF
            if "$@"; then
              return 0
            fi
          done
          return 1
        }
        python -m pip install --upgrade pip setuptools wheel
        retry-with-backoff pip install -r requirements.txt
        retry-with-backoff pip install -r requirements_dev.txt
    - name: flake8
      run: |
        flake8 shifthappens
        flake8 tests
    - name: black
      run: |
        black --check --verbose .
    - name: isort
      run: |
        isort --check .
    - name: documentation
      id: documentation
      run: |
        RESULT=$(git diff --name-only origin/main | grep .py$ | xargs interrogate -f 0 -v)
        #RESULT=$(echo $RESULT | sed -e 's/^-\+ \(RESULT[^\-]*\) -*/\1/g' | grep -v Summary | grep -v "Coverage for" )
        RESULT=$(tail -n +2 <<< $RESULT)
        STATUS=$(tail -n1 <<< $RESULT)
        STATUS=$(sed 's/-//g' <<< $STATUS)
        RESULT=$(head -n -2 <<< $RESULT)
        RESULT=$(tail -n 1 <<< $RESULT)
        RESULT="$RESULT \n $STATUS"
        RESULT="${RESULT//'%'/'%25'}"
        RESULT="${RESULT//$'\n'/'%0A'}"
        RESULT="${RESULT//$'\r'/'%0D'}"
        echo "::set-output name=result::$RESULT"
    - name: comment result on PR
      uses: thollander/actions-comment-pull-request@v1
      with:
        message: |
          Test and Coverage Report:
          ${{ steps.documentation.outputs.result }}
        comment_includes: 'Test and Coverage Report'
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Install package
      run: |
        pip install -e .
    - name: Install tests/requirements.txt
      run: |
        function retry-with-backoff() {
          for BACKOFF in 0 1 2 4 8 16 32 64; do
            sleep $BACKOFF
            if "$@"; then
              return 0
            fi
          done
          return 1
        }
        retry-with-backoff pip install -r tests/requirements.txt
    - name: mypy (package)
      run: |
        mypy --install-types --non-interactive shifthappens/
        mypy -p shifthappens
    - name: mypy (tests)
      run: |
        mypy tests/
    - name: Test with pytest
      run: |
        pytest --durations=0 --verbose

  wheel-tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 20
      matrix:
        python-version: ['3.9']

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - uses: actions/cache@v1
      with:
        path: ~/.cache/torch
        key: ${{ runner.os }}-cache-torch
    - uses: actions/cache@v1
      with:
        path: ~/.torch
        key: ${{ runner.os }}-torch
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel build pytest
    - name: Build wheel
      run: |
         python -m build --wheel
    - name: Install wheel
      run: |
        wheelname=$(ls dist/shifthappens-*.whl| head -1)
        pip install $wheelname
    - name: Test with pytest
      run: |
        pytest --durations=0 --verbose